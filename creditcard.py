# -*- coding: utf-8 -*-
"""creditcard.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/174lhdkUd5BW53hBme9hzauGbwtmrMZhQ
"""

from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler, LabelEncoder
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score, classification_report
import pandas as pd

# Load the dataset
df = pd.read_csv('creditcard.csv')

# Display class value counts
class_names = {0: 'Not Fraud', 1: 'Fraud'}
print(df['Class'].value_counts().rename(index=class_names))
print("Missing Values")
print(df.isnull().sum())

# Fill missing values with the mean
df.fillna(df.mean(), inplace=True)
print(df.isnull().sum())

# Define feature columns and target column
feature_names = df.iloc[:, 1:30].columns
target = 'Class'

# Separate features and target
x = df[feature_names]
y = df[target]

# Apply label encoding to target 'Class'
label_encoder = LabelEncoder()
y_encoded = label_encoder.fit_transform(y)

# Split the dataset
x_train, x_test, y_train, y_test = train_test_split(x, y_encoded, test_size=0.30, random_state=42)

# Standardize features using StandardScaler
scaler = StandardScaler()
x_train_scaled = scaler.fit_transform(x_train)
x_test_scaled = scaler.transform(x_test)

# Create and train the model
model = LogisticRegression()
model.fit(x_train_scaled, y_train)

# Make predictions
y_pred = model.predict(x_test_scaled)

# Evaluate the model
accuracy = accuracy_score(y_test, y_pred)
report = classification_report(y_test, y_pred)

print("Accuracy:", accuracy)
print("Classification Report:\n", report)